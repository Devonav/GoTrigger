import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { getApiUrl } from '../../../../environments/environment';

export interface CVEMetric {
  cvssV3: {
    baseScore: number;
    baseSeverity: string;
  };
}

export interface CVEItem {
  cve: {
    id: string;
    descriptions: Array<{
      lang: string;
      value: string;
    }>;
    published: string;
    lastModified: string;
    metrics: {
      cvssMetricV31?: CVEMetric[];
    };
  };
}

export interface CVEResponse {
  resultsPerPage: number;
  startIndex: number;
  totalResults: number;
  vulnerabilities: CVEItem[];
}

export interface SearchCVERequest {
  keyword: string;
  limit?: number;
}

@Injectable({
  providedIn: 'root'
})
export class CveService {
  private readonly API_URL = getApiUrl();

  constructor(private http: HttpClient) {}

  searchCVEs(keyword: string, limit: number = 20): Observable<CVEResponse> {
    return this.http.post<CVEResponse>(
      `${this.API_URL}/cve/search`,
      { keyword, limit }
    );
  }

  getLatestCVEs(limit: number = 20): Observable<CVEResponse> {
    return this.http.get<CVEResponse>(
      `${this.API_URL}/cve/latest?limit=${limit}`
    );
  }
}
